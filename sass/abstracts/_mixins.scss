@mixin clearfix {
	&::after{
		content: "";
		display: table;
		clear: both;
	}
}

@mixin center-horizontal-vertical {
	position: absolute;
	top:50%;
	left:50%;
	transform: translate(-50%,-50%);
}

// Media query manager

/*
0     - 600px:		phone

600   - 900px:	    Tablet portrait
900   - 1200px:	    Tablet landscape
[1200 - 1800]: 		Normal Styles Apply.
1800px +:	        Desktop 

*/
	// @content - pass css code into this respond-phone func

@mixin respond-phone {
	@media (max-width: 600px) { @content };
}

/*
$breakPoint arguments:
- phone
- tab-port
- tab-land
- big-desktop

ORDER - Base > Typography > layout > grid > page layout > components
*/

// check if device is phone, apply these breakpoint styles
@mixin respond($breakpoint) {
	 @if $breakpoint == phone {
        @media (max-width: 37.5em) { @content; } //600px 600px/16px
    }
    @if $breakpoint == tab-port {
        @media (max-width: 56.25em) { @content; } //900px 900px/16px
    }
    @if $breakpoint == tab-land {
        @media (max-width: 75em) { @content; } //1200px  1200px/16px
    }
    @if $breakpoint == big-desktop {
        @media (min-width: 112.5em) { @content; } //1800px 1800px/16px
    }
}
// ems/rems -> not affected by root font size setting (html{62.5%;})
// so 1em/1rem are equal to default font-size => 16px
// ems -> use for media queries

// RESPONSIVE IMG CSS
// 192 reference e.g. retina displays
// min-res:192 AND min-width: 600px , OR min-width:2000px;
@mixin respondImg {
		// -webkit- for safari support
		@media (min-resolution:192dpi) and (min-width: 37.5em),
			   (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em), 
			   (min-width: 125em) {
			@content;
		}
}

